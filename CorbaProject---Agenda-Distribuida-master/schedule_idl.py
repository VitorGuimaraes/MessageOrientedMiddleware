# Python stubs generated by omniidl from schedule.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "Agenda"
#
__name__ = "Agenda"
_0_Agenda = omniORB.openModule("Agenda", r"schedule.idl")
_0_Agenda__POA = omniORB.openModule("Agenda__POA", r"schedule.idl")


# interface Schedule
_0_Agenda._d_Schedule = (omniORB.tcInternal.tv_objref, "IDL:Agenda/Schedule:1.0", "Schedule")
omniORB.typeMapping["IDL:Agenda/Schedule:1.0"] = _0_Agenda._d_Schedule
_0_Agenda.Schedule = omniORB.newEmptyClass()
class Schedule :
    _NP_RepositoryId = _0_Agenda._d_Schedule[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Agenda.Schedule = Schedule
_0_Agenda._tc_Schedule = omniORB.tcInternal.createTypeCode(_0_Agenda._d_Schedule)
omniORB.registerType(Schedule._NP_RepositoryId, _0_Agenda._d_Schedule, _0_Agenda._tc_Schedule)

# Schedule operations and attributes
Schedule._d_get_contacts_size = ((), (omniORB.tcInternal.tv_long, ), None)
Schedule._d_get_names = ((omniORB.tcInternal.tv_long, ), ((omniORB.tcInternal.tv_string,0), ), None)
Schedule._d_get_phones = ((omniORB.tcInternal.tv_long, ), ((omniORB.tcInternal.tv_string,0), ), None)
Schedule._d_search = ((), (), None)
Schedule._d_add = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), None)
Schedule._d_external_add = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), None)
Schedule._d_remove = ((omniORB.tcInternal.tv_long, ), (), None)
Schedule._d_external_remove = ((omniORB.tcInternal.tv_long, ), (), None)
Schedule._d_edit = ((omniORB.tcInternal.tv_long, (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), None)
Schedule._d_external_edit = ((omniORB.tcInternal.tv_long, (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), None)
Schedule._d_receive_backup = ((), (), None)
Schedule._d_isOnline = ((), (), None)

# Schedule object reference
class _objref_Schedule (CORBA.Object):
    _NP_RepositoryId = Schedule._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def get_contacts_size(self, *args):
        return self._obj.invoke("get_contacts_size", _0_Agenda.Schedule._d_get_contacts_size, args)

    def get_names(self, *args):
        return self._obj.invoke("get_names", _0_Agenda.Schedule._d_get_names, args)

    def get_phones(self, *args):
        return self._obj.invoke("get_phones", _0_Agenda.Schedule._d_get_phones, args)

    def search(self, *args):
        return self._obj.invoke("search", _0_Agenda.Schedule._d_search, args)

    def add(self, *args):
        return self._obj.invoke("add", _0_Agenda.Schedule._d_add, args)

    def external_add(self, *args):
        return self._obj.invoke("external_add", _0_Agenda.Schedule._d_external_add, args)

    def remove(self, *args):
        return self._obj.invoke("remove", _0_Agenda.Schedule._d_remove, args)

    def external_remove(self, *args):
        return self._obj.invoke("external_remove", _0_Agenda.Schedule._d_external_remove, args)

    def edit(self, *args):
        return self._obj.invoke("edit", _0_Agenda.Schedule._d_edit, args)

    def external_edit(self, *args):
        return self._obj.invoke("external_edit", _0_Agenda.Schedule._d_external_edit, args)

    def receive_backup(self, *args):
        return self._obj.invoke("receive_backup", _0_Agenda.Schedule._d_receive_backup, args)

    def isOnline(self, *args):
        return self._obj.invoke("isOnline", _0_Agenda.Schedule._d_isOnline, args)

omniORB.registerObjref(Schedule._NP_RepositoryId, _objref_Schedule)
_0_Agenda._objref_Schedule = _objref_Schedule
del Schedule, _objref_Schedule

# Schedule skeleton
__name__ = "Agenda__POA"
class Schedule (PortableServer.Servant):
    _NP_RepositoryId = _0_Agenda.Schedule._NP_RepositoryId


    _omni_op_d = {"get_contacts_size": _0_Agenda.Schedule._d_get_contacts_size, "get_names": _0_Agenda.Schedule._d_get_names, "get_phones": _0_Agenda.Schedule._d_get_phones, "search": _0_Agenda.Schedule._d_search, "add": _0_Agenda.Schedule._d_add, "external_add": _0_Agenda.Schedule._d_external_add, "remove": _0_Agenda.Schedule._d_remove, "external_remove": _0_Agenda.Schedule._d_external_remove, "edit": _0_Agenda.Schedule._d_edit, "external_edit": _0_Agenda.Schedule._d_external_edit, "receive_backup": _0_Agenda.Schedule._d_receive_backup, "isOnline": _0_Agenda.Schedule._d_isOnline}

Schedule._omni_skeleton = Schedule
_0_Agenda__POA.Schedule = Schedule
omniORB.registerSkeleton(Schedule._NP_RepositoryId, Schedule)
del Schedule
__name__ = "Agenda"

#
# End of module "Agenda"
#
__name__ = "schedule_idl"

_exported_modules = ( "Agenda", )

# The end.
